#!/usr/bin/env node
/*
 * This file handles ALL web page functions.
 * DO NOT DELETE.
 */

const createWebPage = require("../lib/scripts/createWebPage");
const { deleteWebPage } = require("../lib/scripts/deleteWebPage");
const linespace = require("../lib/utils/linespace");
const { deleteAllWebPages } = require("../lib/scripts/nukeProject");
const { updatePageCount } = require("../lib/scripts/updatePageCount");
const condenseCSS = require("../lib/scripts/condensecss");
const buildPage = require("../lib/scripts/buildPage");
const resolveDeleteArgs = require("../lib/scripts/resolveDeleteArgs");
const resolveCreateArgs = require("../lib/scripts/resolveCreateArgs");
const resolvePageName = require("../lib/scripts/resolvePageName");
const terminal = require("../lib/utils/terminal");

var pageName = resolvePageName(process.argv[3]);
switch (process.argv[2]) {
  case "create-page":
    resolveCreateArgs(process.argv.slice(3)).then((args) => {
      createWebPage(
        pageName,
        args,
        `${args.diffDir ? args.pageDestination : "pageweaver.pages"}`
      ).then((stat) => {
        switch (stat) {
          case "success":
            updatePageCount(process.argv[3], "append", args);
            console.log(`${pageName} was created succesfully.`.green);
            linespace();
            break;
          case "already-exists":
            terminal.error(
              `Existing page in folder.`,
              `${pageName} page already exists in the specified folder. To overwrite, use --overwrite.`
            );
            linespace();
            break;
          case "undefined-name":
            terminal.error(
              "Undefined or Invalid Web page name.",
              `The command structure is pageweaver create-page [page-name] -- [--arg1] [--arg2].`
            );
            break;
          case "duplicate":
            updatePageCount(process.argv[3], "append", args);
            terminal.warn(
              `Duplicate Web Page Folders with the name '${pageName}'`
            );
            break;
        }
      });
    });
    break;
  case "delete-page":
    resolveDeleteArgs(process.argv[2]).then((args) => {
      deleteWebPage(pageName, args.sourceFolder).then((stat) => {
        switch (stat) {
          case "success":
            terminal.success(`${pageName} deleted successfully.`);
            updatePageCount(process.argv[3], "remove", args);
            break;
          case "non-existent":
            terminal.error(
              `Non-Existent Page.`,
              "Pageweaver could not find the page you're trying to delete. Check carefully and try again. "
            );
            break;
          case "undefined-filename":
            terminal.error(
              "Undefined or invalid page name.",
              `The filename you specified is invalid. Please enter a correct filename and try again.`
            );
        }
      });
    });
    break;
  case "nuke-project":
    deleteAllWebPages();
    break;
  case "condense-css":
    condenseCSS(process.argv[3]);
    break;
  case "build-page":
    break;
  case undefined:
    console.log(
      `
Welcome to Pageweaver.

Usage: pageweaver <command> [--arguments]

=== COMMANDS ===================

    <create-page>              Creates a new web page.
    ==arguments=====
    --responsive               Generates css files for different screen widths.             
    --no-default-html          Does not write into generated HTML document.
    --no-javascript            Does not generate javascript.
    --no-css                   Does not include CSS.
    --jquery                   Add Jquery CDN Link to website.
    --php                      Gnerates PHP file in place of HTML.
    --animation, --animated,   Generates animations.css file.
    --animations
    --vue                      Generates page with vue CDN link.
    --vue-cli                  Generates Vue CLI App.
    --vue-router               Adds router to Vue app.
    --react                    Generates page with React CDN link.
    --react-cli                Generates React CLI App.
    --redux                    Adds Redux to React App.
    --react-router             Add router to React App.
    --in:<PATH>                Path to where pages should be generated in. 
                               Defaults to the 'pageweaver.pages' folder.

    <delete-page>              Deletes existing web page.
    --from:<PATH>

    <nuke-project>             Deltes all web pages.
`.green
    );
    break;
  case "test":
    require("../lib/test.js");
}
